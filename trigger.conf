#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
regex = white
replace = cyan
trigger = green
trigger_disabled = red

[trigger]
beep.arguments = ""
beep.command = "/print -beep"
beep.conditions = "${tg_displayed} && (${tg_highlight} || ${tg_msg_pv})"
beep.enabled = on
beep.hook = print
beep.post_action = none
beep.regex = ""
beep.return_code = ok
cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass.command = ""
cmd_pass.conditions = ""
cmd_pass.enabled = on
cmd_pass.hook = modifier
cmd_pass.post_action = none
cmd_pass.regex = "==^((/(msg|m|quote) +nickserv +(id|identify|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/set +[^ ]*password[^ ]* +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
cmd_pass.return_code = ok
hsignal_znc_commands.arguments = "znc_commands"
hsignal_znc_commands.command = "/command -buffer ${buffer.full_name} * /quote znc help ${_bar_item_line};/command -buffer ${buffer.full_name} * /input delete_line;/command -buffer ${buffer.full_name} * /input insert ${_bar_item_line}\x20"
hsignal_znc_commands.conditions = ""
hsignal_znc_commands.enabled = on
hsignal_znc_commands.hook = hsignal
hsignal_znc_commands.post_action = none
hsignal_znc_commands.regex = "/^0$/Version/_bar_item_line /^1$/ListMods/_bar_item_line /^2$/ListAvailMods/_bar_item_line /^3$/ListNicks/_bar_item_line /^4$/ListServers/_bar_item_line /^5$/ListNetworks/_bar_item_line /^6$/AddTrustedServerFingerprint/_bar_item_line /^7$/DelTrustedServerFingerprint/_bar_item_line /^8$/ListTrustedServerFingerprints/_bar_item_line /^9$/DisableChan/_bar_item_line /^10$/Topics/_bar_item_line /^11$/ClearAllChannelBuffers/_bar_item_line /^12$/ClearAllQueryBuffers/_bar_item_line /^13$/AddBindHost/_bar_item_line /^14$/DelBindHost/_bar_item_line /^15$/ListBindHosts/_bar_item_line /^16$/SetBindHost/_bar_item_line /^17$/SetUserBindHost/_bar_item_line /^18$/ClearBindHost/_bar_item_line /^19$/ClearUserBindHost/_bar_item_line /^20$/ShowBindHost/_bar_item_line /^21$/Disconnect/_bar_item_line /^22$/ListPorts/_bar_item_line /^23$/Rehash/_bar_item_line /^24$/ListUsers/_bar_item_line /^25$/ListAllUserNetworks/_bar_item_line /^26$/ListChans/_bar_item_line /^27$/ListClients/_bar_item_line /^28$/Broadcast/_bar_item_line /^29$/Restart/_bar_item_line"
hsignal_znc_commands.return_code = ok
msg_auth.arguments = "5000|irc_message_auth"
msg_auth.command = ""
msg_auth.conditions = ""
msg_auth.enabled = on
msg_auth.hook = modifier
msg_auth.post_action = none
msg_auth.regex = "==^(.*(id|identify|register|ghost +[^ ]+|release +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
msg_auth.return_code = ok
send_to_active_grep_log_nick.arguments = "send_to_active_grep_log_nick"
send_to_active_grep_log_nick.command = "/input delete_line;/input insert /exec -sh -norc -pipe "/input insert grep -hiP '^\[\d{2}:\d{2}:\d{2}\] (<|\* )\Q${tg_argv1}\E>? ${tg_argv_eol2} " grep -hiP '^\[\d{2}:\d{2}:\d{2}\] (<|\* )\Q${tg_argv1}\E>? ${tg_argv_eol2}' ~/.znc/users/r3m/moddata/log/`date "+%Y"`/'${server}'/'${buffer.short_name}'.* | shuf -n 1"
send_to_active_grep_log_nick.conditions = "${tg_argv_eol1} && ${type} =~ ^(private|channel)$"
send_to_active_grep_log_nick.enabled = on
send_to_active_grep_log_nick.hook = command
send_to_active_grep_log_nick.post_action = none
send_to_active_grep_log_nick.regex = "/\\\$/\\\\/tg_argv1"
send_to_active_grep_log_nick.return_code = ok
server_pass.arguments = "5000|input_text_display;5000|history_add"
server_pass.command = ""
server_pass.conditions = ""
server_pass.enabled = on
server_pass.hook = modifier
server_pass.post_action = none
server_pass.regex = "==^(/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}"
server_pass.return_code = ok
set_title_weather_buffer.arguments = ""
set_title_weather_buffer.command = "/command -buffer exec.exec.weather core /buffer set title ${tg_message_nocolor}"
set_title_weather_buffer.conditions = "${buffer.full_name} == exec.exec.weather && ${tg_message_nocolor} =~ ^Weather for"
set_title_weather_buffer.enabled = on
set_title_weather_buffer.hook = print
set_title_weather_buffer.post_action = none
set_title_weather_buffer.regex = ""
set_title_weather_buffer.return_code = ok
update_whitelist_on_serv_add_rename_del.arguments = ""
update_whitelist_on_serv_add_rename_del.command = "/perlexec my ($oldname,$newname) = split(/ /, q(${tg_message_nocolor}))\; my $newvalue = q(${buffers.look.whitelist_buffers})\; $newvalue =~ s/$oldname/$newname/\; weechat::command(q(), q(/set buffers.look.whitelist_buffers ) . $newvalue)"
update_whitelist_on_serv_add_rename_del.conditions = "${buffer.full_name} == core.weechat && ${tg_message_nocolor} =~ ^irc: server \S+ (added|has been)"
update_whitelist_on_serv_add_rename_del.enabled = on
update_whitelist_on_serv_add_rename_del.hook = print
update_whitelist_on_serv_add_rename_del.post_action = none
update_whitelist_on_serv_add_rename_del.regex = "/^irc: server (\S+) added.*/^ server.${re:1},/tg_message_nocolor /^irc: server (\S+) has been renamed to (.*)/server.${re:1}, server.${re:2},/tg_message_nocolor /^irc: server (\S+) has been deleted/server.${re:1},/tg_message_nocolor"
update_whitelist_on_serv_add_rename_del.return_code = ok
upgrade_scripts.arguments = "day_changed"
upgrade_scripts.command = "/script update;/wait 10s /script upgrade"
upgrade_scripts.conditions = ""
upgrade_scripts.enabled = on
upgrade_scripts.hook = signal
upgrade_scripts.post_action = none
upgrade_scripts.regex = ""
upgrade_scripts.return_code = ok
url_color.arguments = "weechat_print"
url_color.command = ""
url_color.conditions = "${tg_notify}"
url_color.enabled = on
url_color.hook = modifier
url_color.post_action = none
url_color.regex = "==\S+://\S+==${color:*white}${re:0}${color:reset}=="
url_color.return_code = ok
weather_shortcut.arguments = "input_text_for_buffer"
weather_shortcut.command = ""
weather_shortcut.conditions = "${buffer[tg_modifier_data].full_name} == exec.exec.weather && ${tg_string_nocolor} !~ ^/"
weather_shortcut.enabled = on
weather_shortcut.hook = modifier
weather_shortcut.post_action = none
weather_shortcut.regex = "==(.*)==/weather ${re:1}"
weather_shortcut.return_code = ok
znc_create_commands_list_and_regex.arguments = ""
znc_create_commands_list_and_regex.command = "/mute set plugins.var.python.text_item.znc_commands ${plugins.var.python.text_item.znc_commands}${tg_message}\${\n};/perlexec my $number = split(/ /, q(${trigger.trigger.hsignal_znc_commands.regex}))\; weechat::command(q(), q(/mute trigger set hsignal_znc_commands regex ${trigger.trigger.hsignal_znc_commands.regex} /^) . $number . q($/${tg_message_nocolor}/_bar_item_line))"
znc_create_commands_list_and_regex.conditions = "${buffer.short_name} == *status && ${tg_message_nocolor} =~ ^(Command:|\|) [a-zA-Z]+\s && ${tg_message_nocolor} !~ ^\S+ Command\s"
znc_create_commands_list_and_regex.enabled = off
znc_create_commands_list_and_regex.hook = print
znc_create_commands_list_and_regex.post_action = none
znc_create_commands_list_and_regex.regex = "/^(Command:|\|) ([a-zA-Z]+).*/${re:2}/tg_message_nocolor /.*/${tg_message_nocolor}/tg_message /.*([A-Z]\S+)/${color:${info:irc_nick_color_name,${re:1}}}${re:0}${color:reset}/tg_message"
znc_create_commands_list_and_regex.return_code = ok
