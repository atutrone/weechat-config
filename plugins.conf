#
# weechat -- plugins.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[var]
fifo.fifo = "on"
guile.check_license = "off"
javascript.check_license = "off"
lua.check_license = "off"
perl.beep.beep_command_dcc = "$bell"
perl.beep.beep_command_highlight = "$bell"
perl.beep.beep_command_pv = "$bell"
perl.beep.beep_command_timeout = "30000"
perl.beep.beep_dcc = "on"
perl.beep.beep_highlight = "on"
perl.beep.beep_highlight_blacklist = "off"
perl.beep.beep_highlight_whitelist = "off"
perl.beep.beep_pv = "on"
perl.beep.beep_pv_blacklist = "off"
perl.beep.beep_pv_whitelist = "off"
perl.beep.beep_trigger_highlight = ""
perl.beep.beep_trigger_pv = ""
perl.beep.bell_always = ""
perl.beep.blacklist_nicks = ""
perl.beep.whitelist_channels = ""
perl.beep.whitelist_nicks = ""
perl.buddylist.buddy.on.server = "on"
perl.buddylist.buddy.on.server.color = "lightgreen"
perl.buddylist.buddylist = "%h/buddylist.txt"
perl.buddylist.callback.timeout = "60"
perl.buddylist.check.buddies = "20"
perl.buddylist.color.away = "cyan"
perl.buddylist.color.default = "default"
perl.buddylist.color.number = "lightred"
perl.buddylist.color.offline = "blue"
perl.buddylist.color.online = "yellow"
perl.buddylist.color.server = "white"
perl.buddylist.color.server.offline = "hide"
perl.buddylist.display.original.nick = "off"
perl.buddylist.display.social.net = "on"
perl.buddylist.display.social.net.color = "yellow"
perl.buddylist.hide.bar = "on"
perl.buddylist.hide.buddy.if.offline = "off"
perl.buddylist.hide.server.if.buddies.offline = "off"
perl.buddylist.hide.servername.in.buddylist = "off"
perl.buddylist.show.query = "on"
perl.buddylist.sort = "default"
perl.buddylist.text.away = ""
perl.buddylist.text.color = "white"
perl.buddylist.text.offline = ""
perl.buddylist.text.online = ""
perl.buddylist.use.redirection = "on"
perl.check_license = "off"
perl.coords.color.selection = "reverse.brown,black"
perl.coords.color.selection_cursor = "reverse.underline"
perl.coords.color.url_highlight = "reverse.underline"
perl.coords.color.url_highlight_active = "reverse.brown,black"
perl.coords.copybuf_short_name = "Â©"
perl.coords.hyper_channels = "off"
perl.coords.hyper_nicks = "off"
perl.coords.hyper_prefix = "on"
perl.coords.hyper_show = "url"
perl.coords.mouse.click_select_pane = "on"
perl.coords.mouse.click_through_pane = "off"
perl.coords.mouse.close_on_release = "110"
perl.coords.mouse.copy_on_click = "on"
perl.coords.mouse.handle_scroll = "off"
perl.coords.mouse.scroll_inactive_pane = "on"
perl.coords.mouse.url_open_2nd_click = "off"
perl.coords.url_braces = "[({<"''">})]"
perl.coords.url_non_beginnings = "\W"
perl.coords.url_non_endings = "[.,;:?!_-]"
perl.coords.url_regex = "\w+://\S+ | (?:^|(?<=\s))(?:\S+\.){2,}\w{2,5}(?:/\S*|(?=\s)|$) | (?:^|(?<=\s))(?:\S+\.)+\w{2,5}/(?:\S+)?"
perl.coords.use_nick_menu = "off"
perl.coords.xterm_compatible = "rxvt-uni"
perl.highmon.alignment = "nchannel"
perl.highmon.away_only = "off"
perl.highmon.color_buf = "on"
perl.highmon.first_run = "true"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "off"
perl.highmon.merge_private = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.short_names = "off"
perl.pushover.blacklist = "irc.server.*,irc.*.*status"
perl.pushover.enabled = "on"
perl.pushover.free_pass = ""
perl.pushover.free_user = ""
perl.pushover.nma_apikey = ""
perl.pushover.only_if_away = "off"
perl.pushover.only_if_inactive = "off"
perl.pushover.pb_apikey = "${sec.data.pushbulletapikey}"
perl.pushover.pb_device_iden = ""
perl.pushover.priority = ""
perl.pushover.rate_limit = "0"
perl.pushover.redact_priv_msg = "off"
perl.pushover.service = "pushbullet"
perl.pushover.short_name = "on"
perl.pushover.show_highlights = "on"
perl.pushover.show_priv_msg = "on"
perl.pushover.sound = ""
perl.pushover.token = "ajEX9RWhxs6NgeXFJxSK2jmpY54C9S"
perl.pushover.user = ""
perl.pushover.verbose = "1"
python.bitlbee_typing_notice.channel = "&bitlbee"
python.bitlbee_typing_notice.server = "bitlbee"
python.bitlbee_typing_notice.timeout = "4"
python.check_license = "off"
python.grep.clear_buffer = "off"
python.grep.default_tail_head = "10"
python.grep.go_to_buffer = "on"
python.grep.log_filter = ""
python.grep.max_lines = "4000"
python.grep.show_summary = "on"
python.grep.size_limit = "2048"
python.text_item.znc_commands = "private Version${\n}ListMods${\n}ListAvailMods${\n}ListNicks${\n}F11ListServers${\n}ListNetworks${\n}F07AddTrustedServerFingerprint${\n}F07DelTrustedServerFingerprint${\n}F07ListTrustedServerFingerprints${\n}DisableChan${\n}Topics${\n}ClearAllChannelBuffers${\n}ClearAllQueryBuffers${\n}AddBindHost${\n}DelBindHost${\n}ListBindHosts${\n}SetBindHost${\n}SetUserBindHost${\n}ClearBindHost${\n}ClearUserBindHost${\n}ShowBindHost${\n}Disconnect${\n}ListPorts${\n}Rehash${\n}ListUsers${\n}ListAllUserNetworks${\n}ListChans${\n}ListClients${\n}Broadcast${\n}Restart${\n}"
python.urlbar.http_port = "31001"
python.urlbar.ignore = "grep"
python.urlbar.remember_amount = "25"
python.urlbar.show_buffername = "on"
python.urlbar.show_index = "on"
python.urlbar.show_nick = "on"
python.urlbar.show_timestamp = "on"
python.urlbar.time_format = "%H:%M"
python.urlbar.use_popup = "on"
python.urlbar.visible_amount = "5"
python.urlbar.visible_seconds = "5"
python.urlbuf.display_active_buffer = "on"
python.urlbuf.display_buffer_number = "on"
python.urlbuf.display_nick = "on"
python.urlbuf.display_private = "on"
python.urlbuf.skip_buffers = ""
python.urlbuf.skip_duplicates = "on"
python.urlserver.buffer_short_name = "off"
python.urlserver.color = "darkgray"
python.urlserver.color_in_msg = ""
python.urlserver.debug = "off"
python.urlserver.display_urls = "on"
python.urlserver.display_urls_in_msg = "off"
python.urlserver.http_allowed_ips = ""
python.urlserver.http_auth = ""
python.urlserver.http_auth_redirect = "on"
python.urlserver.http_autostart = "on"
python.urlserver.http_bg_color = "#f4f4f4"
python.urlserver.http_css_url = ""
python.urlserver.http_embed_image = "off"
python.urlserver.http_embed_youtube = "on"
python.urlserver.http_embed_youtube_size = "480*350"
python.urlserver.http_fg_color = "white"
python.urlserver.http_hostname = ""
python.urlserver.http_hostname_display = ""
python.urlserver.http_open_in_new_page = "on"
python.urlserver.http_port = "3300"
python.urlserver.http_port_display = ""
python.urlserver.http_prefix_suffix = " "
python.urlserver.http_scheme_display = "http"
python.urlserver.http_time_format = "%d/%m/%y %H:%M:%S"
python.urlserver.http_title = "WeeChat URLs"
python.urlserver.http_url_prefix = "xox"
python.urlserver.msg_filtered = "off"
python.urlserver.msg_ignore_buffers = "core.weechat,python.grep,irc.BitlBee,perl.highmon"
python.urlserver.msg_ignore_dup_urls = "off"
python.urlserver.msg_ignore_regex = ""
python.urlserver.msg_ignore_tags = "irc_quit,irc_part,notify_none"
python.urlserver.msg_require_tags = "nick_"
python.urlserver.separators = "[|]"
python.urlserver.url_min_length = "0"
python.urlserver.urls_amount = "100"
ruby.check_license = "off"
tcl.check_license = "off"

[desc]
perl.beep.beep_command_dcc = "command for beep on dcc, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_highlight = "command for beep on highlight, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_pv = "command for beep on private message, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_timeout = "timeout for command run (in milliseconds, 0 = never kill (not recommended)) (default: "30000")"
perl.beep.beep_dcc = "beep on dcc (default: "on")"
perl.beep.beep_highlight = "beep on highlight (default: "on")"
perl.beep.beep_highlight_blacklist = "turn blacklist for highlights on or off (default: "off")"
perl.beep.beep_highlight_whitelist = "turn whitelist for highlights on or off (default: "off")"
perl.beep.beep_pv = "beep on private message (default: "on")"
perl.beep.beep_pv_blacklist = "turn blacklist for private messages on or off (default: "off")"
perl.beep.beep_pv_whitelist = "turn whitelist for private messages on or off (default: "off")"
perl.beep.beep_trigger_highlight = "word that will trigger execution of beep_command_highlight (if empty, anything will trigger) (default: "")"
perl.beep.beep_trigger_pv = "word that will trigger execution of beep_command_pv (it empty, anything will trigger) (default: "")"
perl.beep.bell_always = "use $bell on private messages and/or highlights regardless of trigger and whitelist settings (example: "pv,highlight") (default: "")"
perl.beep.blacklist_nicks = "comma-separated list of "server.nick": if not empty, these nicks will not be able to trigger execution of commands. Cannot be used in conjuction with whitelist (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.beep.whitelist_channels = "comma-separated list of "server.#channel": if not empty, only these channels will trigger execution of commands (example: "freenode.#weechat,freenode.#channel2") (default: "")"
perl.beep.whitelist_nicks = "comma-separated list of "server.nick": if not empty, only these nicks will trigger execution of commands (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.buddylist.buddy.on.server = "show buddy who is connected to a server, but not visiting the same channel(s) (default: on)"
perl.buddylist.buddy.on.server.color = "color for online buddy but not visiting the same channel(s) (default: lightgreen)"
perl.buddylist.buddylist = "path/file-name to store your buddies. "%h" will be replaced by WeeChat home (by default: ~/.weechat)"
perl.buddylist.callback.timeout = "time in seconds to wait for answer from server. (default: 60)"
perl.buddylist.check.buddies = "time in seconds to send a /whois request to server. Be careful not to flood server (default: 20)"
perl.buddylist.color.away = "color for away buddies"
perl.buddylist.color.default = "fall back color. (default: standard weechat color)"
perl.buddylist.color.number = "color for channel number (default: lightred). If empty, channel list option is off"
perl.buddylist.color.offline = "color for offline buddies"
perl.buddylist.color.online = "color for online buddies"
perl.buddylist.color.server = "color for servername"
perl.buddylist.color.server.offline = "color for disconnected server (default: hide)"
perl.buddylist.display.original.nick = "display original nickname even if buddy changed his /nick (you have to add new nick to buddylist (default: off)"
perl.buddylist.display.social.net = "using bitlbee, buddies will be sorted in sublists with social-network name (eg. msn/jabber/facebook)(default: on)"
perl.buddylist.display.social.net.color = "color for social-network name (default: yellow)"
perl.buddylist.hide.bar = "hides buddylist bar when all servers with added buddies are offline (on = default, always = buddylist bar will be hidden (for example if you want to add item 'buddylist' to 'weechat.bar.status.items', off = buddylist bar will not be hidden))"
perl.buddylist.hide.buddy.if.offline = "hide buddy if offline (default: off)"
perl.buddylist.hide.server.if.buddies.offline = "hides server when all buddies are offline for this server (default: off)"
perl.buddylist.hide.servername.in.buddylist = "hide the servername in buddylist. If "on" only nicks will be displayed in buddylist (default: off)"
perl.buddylist.show.query = "displays a query buffer in front of the channel list"
perl.buddylist.sort = "sort method for buddylist (default = buddylist will be sort by nickname, status = buddylist will be sort by status (online, away, offline))"
perl.buddylist.text.away = "optional away text in buddylist (sort method has to be 'status')"
perl.buddylist.text.color = "color for optional online/away/offline-text in buddylist (default: white)"
perl.buddylist.text.offline = "optional offline text in buddylist (sort method has to be 'status')"
perl.buddylist.text.online = "optional online text in buddylist (sort method has to be 'status')"
perl.buddylist.use.redirection = "using redirection to get status of buddies (needs weechat >=0.3.4) (default: on)"
perl.coords.clipboard_command = "if you set this, an external program may be executed to store the selection or URL. begin with | to pipe into program or use parameters %s for text, %q for quoted text or %x for quoted escape sequence."
perl.coords.color.selection = "the color of the currently selected text in selection mode"
perl.coords.color.selection_cursor = "the weechat color and/or attribute to be used for the text cursor."
perl.coords.color.url_highlight = "the weechat color and/or attribute to be used for highlighting URLs in the copy window. seperate multiple attributes with ."
perl.coords.color.url_highlight_active = "the same as color.url_highlight except for the currently (using arrow keys) selected link."
perl.coords.copybuf_short_name = "short_name to use for coords buffer. it is set to the copy sign by default to not disturb buffers bar width, set to the empty string to have window position and size shown"
perl.coords.copywin_custom_keys = "You can define custom key bindings to use inside the copywin here. syntax is: command-letter:weechat-keycode. available commands: -+>< (up/down/left/right) fbae (forward word/backward word/beginning/end) !@ (open/start selection) /UNCunc (toggle highlights/urls/nicks/channels) q (close window)"
perl.coords.hyper_channels = "make channels to hyperlinks for join"
perl.coords.hyper_nicks = "make nicks to hyperlinks for menu/pm"
perl.coords.hyper_show = "set to types of hyperlinks that are shown by default"
perl.coords.mouse.click_select_pane = "set to on to use the mouse to select windows"
perl.coords.mouse.click_through_pane = "set to on if copy_on_click should work on inactive windows (works only if click_select_pane is set too). set to off if window needs to be active"
perl.coords.mouse.close_on_release = "set to on or a delay (in ms) to autoclose coords buffer opened by copy_on_click on button release, set to off if the coords buffer should stay open after click"
perl.coords.mouse.copy_on_click = "set to on if it should be possible to directly click on URLs and select text, set to off if mouse should only work in open coords buffer"
perl.coords.mouse.handle_scroll = "set to on if coords should handle scrolling inside windows. the script will try to guess non-chat areas to be nicklist, top to be title and bottom to be status and scroll the respective bars if the cursor is in that area. set to off if scrolling should be handled by the default mouse.pl script or another mouse scrolling script"
perl.coords.mouse.scroll_inactive_pane = "set to on if inactive windows should be scrolled instead of active window if the mouse cursor is over it (requires handle_scroll to be enabled)"
perl.coords.mouse.url_open_2nd_click = "if this is set, URLs are only opened when clicked twice (in the same incarnation of a coords buffer) instead of on first click. it can be set to a delay (in ms) that will be added to the close_on_release delay if the script is waiting for a second click on the URL to happen"
perl.coords.url_braces = "parenthesis-like characters which nest and should be excluded when found around an URL. make sure the variable setting nests properly when modifying this."
perl.coords.url_non_endings = "this is matched against the end of a link and removed"
perl.coords.url_regex = "a regular expression to identify URLs in the text. See perlre for more information about Perl regular expressions."
perl.coords.use_nick_menu = "use nick menu when opening nick hyperlink (see hyper_nicks, requires menu.pl script). otherwise open private message. this setting only applies to text mode selection, for mouse see mouse.nick_2nd_click"
perl.pushover.blacklist = "Comma separated list of buffers (full name) to blacklist for notifications (wildcard "*" is allowed, name beginning with "!" is excluded) (default: "")"
perl.pushover.enabled = "Turn script on or off (default: "on")"
perl.pushover.free_pass = "Automatic generated Free key (default: "")"
perl.pushover.free_user = "Free Mobile User ID (see your account) (default: "")"
perl.pushover.nma_apikey = "nma API key (default: "")"
perl.pushover.only_if_away = "Notify only if away status is active (default: "off")"
perl.pushover.only_if_inactive = "Notify only if buffer is not the active (current) buffer (default: "off")"
perl.pushover.pb_apikey = "Pushbullet API key (default: "")"
perl.pushover.pb_device_iden = "Device Iden of pushbullet device (default: "")"
perl.pushover.priority = "priority (empty for default) (default: "")"
perl.pushover.rate_limit = "Rate limit in seconds (0 = unlimited), will send a maximum of 1 notification per time limit (default: "0")"
perl.pushover.redact_priv_msg = "When receiving private message notifications, hide the actual message text (default: "off")"
perl.pushover.service = "Notification service to use. Multiple services may be supplied as comma separated list. (supported services: pushover, nma, pushbullet) (default: "pushover")"
perl.pushover.short_name = "Use short buffer name in notification (default: "off")"
perl.pushover.show_highlights = "Notify on highlights (default: "on")"
perl.pushover.show_priv_msg = "Notify on private messages (default: "on")"
perl.pushover.sound = "Sound (empty for default) (default: "")"
perl.pushover.token = "pushover API token/key (You may feel free to use your own token, so you get your own monthly quota of messages without being affected by other users. See also: https://pushover.net/faq#overview-distribution ) (default: "ajEX9RWhxs6NgeXFJxSK2jmpY54C9S")"
perl.pushover.user = "pushover user key (default: "")"
perl.pushover.verbose = "Verbosity level (0 = silently ignore any errors, 1 = display brief error, 2 = display full server response) (default: "1")"
python.urlbuf.display_active_buffer = "display URLs from the active buffer"
python.urlbuf.display_buffer_number = "display the buffer's number"
python.urlbuf.display_nick = "display the nick of the user"
python.urlbuf.display_private = "display URLs from private messages"
python.urlbuf.skip_buffers = "a comma separated list of buffer numbers to skip"
python.urlbuf.skip_duplicates = "skip the URL that is already in the urlbuf"
python.urlserver.buffer_short_name = "use buffer short name on dedicated buffer (default: "off")"
python.urlserver.color = "gray"
python.urlserver.color_in_msg = "15"
python.urlserver.debug = "print some debug messages (default: "off")"
python.urlserver.display_urls = "off"
python.urlserver.display_urls_in_msg = "on"
python.urlserver.http_allowed_ips = "regex for IPs allowed to use server (example: "^(123.45.67.89|192.160.*)$") (default: "")"
python.urlserver.http_auth = "login and password (format: "login:password") required to access to page with list of URLs (note: content is evaluated, see /help eval) (default: "")"
python.urlserver.http_auth_redirect = "require the login/password (if option "http_auth" is set) for URLs redirections (default: "on")"
python.urlserver.http_autostart = "start the built-in HTTP server automatically) (default: "on")"
python.urlserver.http_bg_color = "background color for HTML page (default: "#f4f4f4")"
python.urlserver.http_css_url = "URL of external Cascading Style Sheet to add (BE CAREFUL: the HTTP referer will be sent to site hosting CSS file!) (empty value = use default embedded CSS) (default: "")"
python.urlserver.http_embed_image = "embed images in HTML page (BE CAREFUL: the HTTP referer will be sent to site hosting image!) (default: "off")"
python.urlserver.http_embed_youtube = "embed youtube videos in HTML page (BE CAREFUL: the HTTP referer will be sent to youtube!) (default: "off")"
python.urlserver.http_embed_youtube_size = "size for embedded youtube video, format is "xxx*yyy" (default: "480*350")"
python.urlserver.http_fg_color = "foreground color for HTML page (default: "#000")"
python.urlserver.http_hostname = "force hostname/IP in bind of socket (empty value = auto-detect current hostname) (default: "")"
python.urlserver.http_hostname_display = "display this hostname in shortened URLs (default: "")"
python.urlserver.http_open_in_new_page = "open links in new pages/tabs (default: "on")"
python.urlserver.http_port = "force port for listening (empty value = find a random free port) (default: "")"
python.urlserver.http_port_display = "display this port in shortened URLs. Useful if you forward a different external port to the internal port (default: "")"
python.urlserver.http_prefix_suffix = "suffix displayed between prefix and message in HTML page (default: " ")"
python.urlserver.http_scheme_display = "display this scheme in shortened URLs (default: "http")"
python.urlserver.http_time_format = "time format in the HTML page (default: "%d/%m/%y %H:%M:%S")"
python.urlserver.http_title = "title of the HTML page (default: "WeeChat URLs")"
python.urlserver.http_url_prefix = "prefix to add in URLs to prevent external people to scan your URLs (for example: prefix "xx" will give URL: http://host.com:1234/xx/8) (default: "")"
python.urlserver.msg_filtered = "shorten URLs in filtered messages (with /filter) (default: "off")"
python.urlserver.msg_ignore_buffers = "comma-separated list (without spaces) of buffers to ignore (full name like "irc.freenode.#weechat") (default: "core.weechat,python.grep")"
python.urlserver.msg_ignore_dup_urls = "ignore duplicated URLs (do not add an URL in list if it is already) (default: "off")"
python.urlserver.msg_ignore_regex = "ignore messages matching this regex (default: "")"
python.urlserver.msg_ignore_tags = "comma-separated list (without spaces) of tags (or beginning of tags) to ignore (for example, use "notify_none" to ignore self messages or "nick_weebot" to ignore messages from nick "weebot") (default: "irc_quit,irc_part,notify_none")"
python.urlserver.msg_require_tags = "comma-separated list (without spaces) of tags (or beginning of tags) required to shorten URLs (for example "nick_" to shorten URLs only in messages from other users) (default: "nick_")"
python.urlserver.separators = "separators for short url list (string with exactly 3 chars) (default: "[|]")"
python.urlserver.url_min_length = "minimum length for an URL to be shortened (0 = shorten all URLs, -1 = detect length based on shorten URL) (default: "0")"
python.urlserver.urls_amount = "number of URLs to keep in memory (and in file when script is not loaded) (default: "100")"
